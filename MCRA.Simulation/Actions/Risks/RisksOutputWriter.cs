using MCRA.Data.Compiled.Wrappers.Exposure;
using MCRA.Data.Management.RawDataObjectConverters;
using MCRA.Data.Management.RawDataWriters;
using MCRA.Data.Raw.Objects.Risks;
using MCRA.General;
using MCRA.General.Action.Settings.Dto;
using System.Collections.Generic;
using System.Linq;

namespace MCRA.Simulation.Actions.Risks {

    public sealed class RisksOutputWriter {

        /// <summary>
        /// Writes the output data generated by a dietary exposures action to the provided raw data writer.
        /// </summary>
        /// <param name="project"></param>
        /// <param name="data"></param>
        /// <param name="result"></param>
        /// <param name="rawDataWriter"></param>
        public void WriteOutputData(ProjectDto project, ActionData data, RisksActionResult result, IRawDataWriter rawDataWriter) {
            var rawDataConverter = new RawRisksDataConverter();
            if (data.ActiveSubstances.Count == 1 || data.CorrectedRelativePotencyFactors != null) {
                var exposureStatistics = getRiskStatistics(project, data, result);
                if (exposureStatistics != null) {
                    var rawData = rawDataConverter.ToRaw(exposureStatistics, project.OutputDetailSettings.SelectedPercentiles);
                    rawDataWriter.Set(rawData);
                }
            }
        }

        /// <summary>
        /// Updates the dietary exposures data of the raw data writer. Appends
        /// another bootstrap record / uncertainty set.
        /// </summary>
        /// <param name="project"></param>
        /// <param name="rawDataWriter"></param>
        /// <param name="data"></param>
        /// <param name="result"></param>
        /// <param name="idBootstrap"></param>
        public void UpdateOutputData(
            ProjectDto project,
            IRawDataWriter rawDataWriter,
            ActionData data,
            RisksActionResult result,
            int idBootstrap
        ) {
            var rawData = rawDataWriter.Get(SourceTableGroup.Risks) as RawRisksData;
            var rawDataConverter = new RawRisksDataConverter();
            if (data.ActiveSubstances.Count == 1 || data.CorrectedRelativePotencyFactors != null) {
                var riskStatistics = getRiskStatistics(project, data, result);
                if (riskStatistics != null) {
                    rawDataConverter.AppendUncertaintyRunValues(
                        rawData,
                        idBootstrap,
                        riskStatistics,
                        project.OutputDetailSettings.SelectedPercentiles
                    );
                }
            }
        }

        private ICollection<SimpleMarginOfExposureStatistics> getRiskStatistics(
            ProjectDto project,
            ActionData data,
            RisksActionResult result
        ) {
            var exposureStatistics = new List<SimpleMarginOfExposureStatistics>();

            if (result.CumulativeIndividualEffects == null) {
                return exposureStatistics;
            }
            var statistics = new SimpleMarginOfExposureStatistics() {
                Code = $"{project.Id}-Margin-of-exposure",
                Name = $"{project.Name}-Margin-of-exposure",
                Description = project.Description,
                Substance = data.ReferenceCompound,
                SamplingWeights = result.CumulativeIndividualEffects.Select(c => c.SamplingWeight).ToList(),
                Intakes = result.CumulativeIndividualEffects.Select(c => c.MarginOfExposure(project.EffectModelSettings.HealthEffectType)).ToList()
            };
            exposureStatistics.Add(statistics);
            return exposureStatistics;
            //if (data.ActiveSubstances.Count > 1) {
            //}
        }
    }
}
