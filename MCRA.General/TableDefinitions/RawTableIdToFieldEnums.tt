<#@ template debug="true" hostSpecific="true" #>
<#@ output extension=".Generated.cs" encoding="utf-8" #>
<#@ Assembly Name="System.Core" #>
<#@ Assembly Name="System.Xml" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Text.RegularExpressions" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Xml" #>
using MCRA.General.TableDefinitions.RawTableFieldEnums;
using MCRA.General;

namespace MCRA.Data.Raw.Constants {
    public static partial class RawTableIdToFieldEnums {
        private static void initializeDictionary() {
            _enumToIdMap = new Dictionary<Type, RawDataSourceTableID> {
<#
  var xmlFilesFolder = Host.ResolvePath("TableDefinitions");
  var xmlFiles = Directory.GetFiles(xmlFilesFolder, "*.xml");

  foreach(var xmlFile in xmlFiles) {
    var xmlDoc = new XmlDocument();
    xmlDoc.Load(xmlFile);

    var tableDefs = xmlDoc.SelectNodes("TableDefinition");
    foreach(XmlNode tableNode in tableDefs) {
      var id = tableNode.SelectSingleNode("Id").InnerText;
      var tableName = tableNode.SelectSingleNode("TargetDataTable")?.InnerText ?? $"Raw{id}";
      //Table formats: defaults to 'MCRA'
      var tableFormat = tableNode.SelectSingleNode("Formats")?.InnerText.ToUpper() ?? "MCRA";
      //only process MCRA table formats
      if(tableFormat == "MCRA") {
#>
              {typeof(<#=tableName#>), RawDataSourceTableID.<#=id#> },
<#
      }
    }
  }
#>
            };
        }
    }
}