<#@ template debug="true" hostSpecific="true" #>
<#@ output extension=".Generated.xml" encoding="utf-8" #>
<#@ Assembly Name="System.Core" #>
<#@ Assembly Name="System.Xml" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Xml" #>
<#@ import namespace="System.Xml.Xsl" #>
<?xml version="1.0" encoding="utf-8"?>
<#
	AppContext.SetSwitch("Switch.System.Xml.AllowDefaultResolver", true);
	var xslInput = Host.ResolvePath("TemplatesCollectionTransform.xslt");
	var xmlFilesFolder = Host.ResolvePath("Templates");
	var xmlFiles = Directory.GetFiles(xmlFilesFolder, "*.xml");
	var xslt = new XslCompiledTransform();
	xslt.Load(xslInput, XsltSettings.TrustedXslt, new XmlUrlResolver());
	var xwSettings = new XmlWriterSettings {
		OmitXmlDeclaration = true,
		NamespaceHandling = NamespaceHandling.OmitDuplicates,
		Indent = true,
		IndentChars = "\t",
		Encoding = new UTF8Encoding()
	};
	var rawXml = "";
	using(var sw = new StringWriter()) {
		foreach(var xmlFile in xmlFiles) {
			var xmlDoc = new XmlDocument();
			xmlDoc.Load(xmlFile);
			using(var xw = XmlWriter.Create(sw, xwSettings)) {
				xmlDoc.WriteTo(xw);
			}
		}
		rawXml = $"<SettingsTemplates>{sw}</SettingsTemplates>";
	}
	using(var tw = new StringWriter()) {
		using(var xt = XmlWriter.Create(tw, xwSettings)) {
			using(var sr = new StringReader(rawXml)) {
				using(var xr = XmlReader.Create(sr)) {
					xslt.Transform(xr, xt);
				}
			}
		}
		#><#=tw.ToString()#><#
	}
#>
