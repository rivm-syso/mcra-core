<#@ template debug="true" hostSpecific="true" #>
<#@ output extension=".Generated.xml" encoding="utf-8" #>
<#@ Assembly Name="System.Core" #>
<#@ Assembly Name="System.Xml" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Xml" #>
<#@ import namespace="System.Xml.Xsl" #>
<?xml version="1.0" encoding="utf-8"?>
<#
	AppContext.SetSwitch("Switch.System.Xml.AllowDefaultResolver", true);
	var xslInput = Host.ResolvePath("transform-module-definitions-compiled.xslt");
	var xmlInput = Host.ResolvePath("ModuleDefinitions.xml");
	var xslt = new XslCompiledTransform();
	xslt.Load(xslInput, XsltSettings.TrustedXslt, new XmlUrlResolver());
	var xwSettings = new XmlWriterSettings {
		OmitXmlDeclaration = true,
		NamespaceHandling = NamespaceHandling.OmitDuplicates,
		Indent = true,
		IndentChars = "\t",
		Encoding = new UTF8Encoding()
	};
	using(var sw = new StringWriter()) {
		using(var xw = XmlWriter.Create(sw, xwSettings)) {
			xslt.Transform(xmlInput, xw);
		}
		#><#=sw.ToString()#><#
	}
#>
